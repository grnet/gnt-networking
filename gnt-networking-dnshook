#!/bin/bash
#
# Copyright 2014-2016 GRNET S.A. All rights reserved.
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
#
#   1. Redistributions of source code must retain the above
#      copyright notice, this list of conditions and the following
#      disclaimer.
#
#   2. Redistributions in binary form must reproduce the above
#      copyright notice, this list of conditions and the following
#      disclaimer in the documentation and/or other materials
#      provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY GRNET S.A. ``AS IS'' AND ANY EXPRESS
# OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GRNET S.A OR
# CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
# USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
# ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# The views and conclusions contained in the software and
# documentation are those of the authors and should not be
# interpreted as representing official policies, either expressed
# or implied, of GRNET S.A.

# Configuration Fallbacks. All can(must for some of them) be overwritten by /etc/default/gnt-networking
TTL=300
# the bind server IP/FQDN
SERVER=""
# this is the .vm.ganeti.xyz
# Leave empty if only reverse dns management is needed.
# TODO: make this zone to be instance specific!!!
FZONE=""
# the file with dns authorization keys
KEYFILE=""

# kerberos authentication settings
# Will be used with kstart and ktutil
KERBEROS_PRINCIPAL=
KERBEROS_KEYTAB=/etc/krb5.keytab
KERBEROS_KSTART_ARGS="-H 1 -l 1h"
KERBEROS_TICKET=/var/lib/gnt-networking/gnt-networking-kerberos.tkt

# Default authentication method
AUTHENTICATION_METHOD=bind9

source /etc/default/gnt-networking
source /usr/lib/gnt-networking/common.sh

# override DNS settings by dnshook.conf
if [ -e /etc/ganeti/dnshook.conf ]; then
    source /etc/ganeti/dnshook.conf
fi


if [ -z "$SERVER" ]; then
  log "SERVER not defined! Aborting.."
  exit 0
fi

# Exit if we do not have instance name.
# It should be exported to hooks for instance related opcodes.
if [ -z "$GANETI_INSTANCE_NAME" ]; then
  exit 0
fi

INSTANCE=$GANETI_INSTANCE_NAME
echo $GANETI_INSTANCE_NAME | grep -q '\.' 1>/dev/null 2>&1
if [ "$?" -gt 0 ] && [ -z "$FZONE" ]; then
  log "Instance $GANETI_INSTANCE_NAME is not FQDN and FZONE not defined! Aborting.."
  exit 0
fi

hostname=$(hostname -f)

# Run only in primary node of instance
if [ "$GANETI_INSTANCE_PRIMARY" != "$hostname" ]; then
  exit 0
fi


if [ "$AUTHENTICATION_METHOD" == "bind9" -a -e "$KEYFILE" ]; then
  log "Will use $KEYFILE keyfile for nsupdate (bind9 method)."
elif [ "$AUTHENTICATION_METHOD" == "kerberos" -a -n "$KERBEROS_PRINCIPAL" ]; then
  log "Will use $KERBEROS_PRINCIPAL principal for nsupdate (kerberos method)."
elif [ "$AUTHENTICATION_METHOD" == "plain" ]; then
  log "Will use no authentication (plain method)"
else
  log "No AUTHENTICATION_METHOD defined or KEYFILE does not exist! Aborting.."
  exit 0
fi


# Main starts here

# This runs only for instance modification
if [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_SET_PARAMS" ]; then
  query_dns
  reset_dns
fi

# If GANETI_INSTANCE_NIC_COUNT is not set then nothing happens
FIRST=0
LAST=$((GANETI_INSTANCE_NIC_COUNT - 1))
for idx in $(seq $FIRST $LAST); do
  ip=GANETI_INSTANCE_NIC${idx}_IP
  mac=GANETI_INSTANCE_NIC${idx}_MAC
  mode=GANETI_INSTANCE_NIC${idx}_MODE
  link=GANETI_INSTANCE_NIC${idx}_LINK
  subnet=GANETI_INSTANCE_NIC${idx}_NETWORK_SUBNET
  subnet6=GANETI_INSTANCE_NIC${idx}_NETWORK_SUBNET6
  itags=GANETI_INSTANCE_TAGS
  ntags=GANETI_INSTANCE_NIC${idx}_NETWORK_TAGS
  eval IP=\$$ip
  eval MAC=\$$mac
  eval MODE=\$$mode
  eval LINK=\$$link
  eval TAGS=\$$itags
  eval NETWORK_SUBNET=\$$subnet
  eval NETWORK_SUBNET6=\$$subnet6
  eval NETWORK_TAGS=\$$ntags

  # Ability to disable IPv4 or IPv6 per instance
  for itag in $TAGS; do
    if [ "X$itag" == "Xdisable_ipv6" ]; then
        DISABLE_IPV6=1
    fi
    if [ "X$itag" == "Xdisable_ipv4" ]; then
        DISABLE_IPV4=1
    fi
  done

  for tag in $NETWORK_TAGS; do
    case $tag in
    $DNS_TAG)

      # Fill in important variables
      get_info

      if [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_CREATE" ]; then
        update_dns add
      elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_REMOVE" ]; then
        update_dns delete
      elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_RENAME" ]; then
        update_dns delete
        # Let's override a variable and add ourselves
        INSTANCE=$GANETI_INSTANCE_NEW_NAME
        update_dns add
      elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_SET_PARAMS" ]; then
        update_dns add
      elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_STARTUP" ]; then
        update_dns add
      elif [ "x$GANETI_OP_CODE" = "xOP_INSTANCE_REBOOT" ]; then
        update_dns delete
        update_dns add
      fi

      ;;
    esac

  done

done
